{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.13",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "jsonify-storage!",
  "docComment": "/**\n * Jsonify the payload for local and session storage.\n *\n * @packageDocumentation\n */\n",
  "name": "jsonify-storage",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "jsonify-storage!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "jsonify-storage!JSONStore:interface",
          "docComment": "/**\n * Wrapper of the native `Storage`.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JSONStore "
            }
          ],
          "releaseTag": "Public",
          "name": "JSONStore",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "jsonify-storage!JSONStore#clear:member",
              "docComment": "/**\n * Same as `Storage.clear`\n *\n * @example\n * ```ts\n * local.set('foo', 123)\n * local.set('bar', 234)\n * local.clear()\n * local.length // => 0\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "clear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "jsonify-storage!JSONStore#get:member",
              "docComment": "/**\n * Get the supplied key corresponding value from the `Storage`, and JSON parse it.\n *\n * If supplied key is not exist or can't parsed with JSON will return null.\n *\n * @example\n * ```ts\n * local.set('foo', { a: 123 })\n * local.get('foo') // => { a: 123 }\n *\n * localStorage.setItem('bar', '你好')\n * local.get('bar') // => null\n * local.get('baz') // => null\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get: "
                },
                {
                  "kind": "Content",
                  "text": "(key: string) => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "get",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "jsonify-storage!JSONStore#key:member",
              "docComment": "/**\n * Same as `Storage.key`\n *\n * @example\n * ```ts\n * local.set('foo', 123)\n * local.set('bar', 234)\n * local.key(0) // => 'foo'\n * local.key(1) // => 'bar'\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "(index: number) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "jsonify-storage!JSONStore#length:member",
              "docComment": "/**\n * Same as `Storage.length`\n *\n * @example\n * ```ts\n * local.length // => 0\n * local.set('foo', 123)\n * local.length // => 1\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "jsonify-storage!JSONStore#remove:member",
              "docComment": "/**\n * Same as `Storage.remove`.\n *\n * @example\n * ```ts\n * local.set('foo', 123)\n * local.remove('foo')\n * local.get('foo') // => null\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove: "
                },
                {
                  "kind": "Content",
                  "text": "(key: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "remove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "jsonify-storage!JSONStore#set:member",
              "docComment": "/**\n * Set a key-val to `Storage`, but jsonify the value.\n *\n * @example\n * ```ts\n * local.set('foo', { a: 123 })\n * local.get('foo') // => { a: 123 }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set: "
                },
                {
                  "kind": "Content",
                  "text": "(key: string, payload: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "set",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "jsonify-storage!local:var",
          "docComment": "/**\n * Wrapper of `localStorage`.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "local: "
            },
            {
              "kind": "Content",
              "text": "import(\"./core\")."
            },
            {
              "kind": "Reference",
              "text": "JSONStore",
              "canonicalReference": "jsonify-storage!JSONStore:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "local",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "jsonify-storage!session:var",
          "docComment": "/**\n * Wrapper of `sessionStorage`.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "session: "
            },
            {
              "kind": "Content",
              "text": "import(\"./core\")."
            },
            {
              "kind": "Reference",
              "text": "JSONStore",
              "canonicalReference": "jsonify-storage!JSONStore:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "session",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        }
      ]
    }
  ]
}
